Terraform uses configuration files written in HCL to deploy to deploy infra resources.
Extenstion: .tf
Resource: Its an object that terraform manages.

Hashicorp configuration language(HCL):
Syntax-->
<block> <parameters> {
key1 = value1
key2 = value2
}

Terraform workflow consist 4 steps:
1> Write configuration file:
resource "local_file" "pet"{
filename = "/roots/pets.txt"
content = "we love pets"
}
2>terraform init
3>terraform plan
4>terraform apply
5>terraform show

**************************************************************************************************

https://registry.terraform.io/providers/hashicorp/local/latest/docs/resources/file

First terraform file with local provider:

root@TerraformManager:/opt/terraform_hcl# cat main.tf
resource "local_file" "pets"{
filename= "/root/pets.txt"
content = "we love pets"
file_permission = "0700"
}

root@TerraformManager:/opt/terraform_hcl# terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/local...
- Installing hashicorp/local v2.2.2...
- Installed hashicorp/local v2.2.2 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
root@TerraformManager:/opt/terraform_hcl# ls -larth
total 32K
drwxr-xr-x 3 root root 4.0K Apr 12 19:48 ..
-rw-r--r-- 1 root root   83 Apr 12 20:12 main.tf
-rw-r--r-- 1 root root  12K Apr 12 20:16 .main.tf.swp
drwxr-xr-x 3 root root 4.0K Apr 12 20:17 .terraform
-rw-r--r-- 1 root root 1.2K Apr 12 20:17 .terraform.lock.hcl
drwxr-xr-x 3 root root 4.0K Apr 12 20:17 .


Format file:

root@TerraformManager:/opt/terraform_hcl# terraform fmt
main.tf
root@TerraformManager:/opt/terraform_hcl# cat main.tf
resource "local_file" "pets" {
  filename        = "/root/pets.txt"
  content         = "we love pets"
  file_permission = "0700"
}


***************************************************************************************

Terraform plan:


root@TerraformManager:/opt/terraform_hcl# terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # local_file.pets will be created
  + resource "local_file" "pets" {
      + content              = "we love pets"
      + directory_permission = "0777"
      + file_permission      = "0700"
      + filename             = "/root/pets.txt"
      + id                   = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you
run "terraform apply" now.
root@TerraformManager:/opt/terraform_hcl#


***************************************************************************************

Terraform apply:

root@TerraformManager:/opt/terraform_hcl# terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # local_file.pets will be created
  + resource "local_file" "pets" {
      + content              = "we love pets"
      + directory_permission = "0777"
      + file_permission      = "0700"
      + filename             = "/root/pets.txt"
      + id                   = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

local_file.pets: Creating...
local_file.pets: Creation complete after 0s [id=d87a5018d4e1c1e1644d11eafcdf53a95c8968ef]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
root@TerraformManager:/opt/terraform_hcl#




root@TerraformManager:~# ls -lrth
total 8.0K
drwxr-xr-x 4 root root 4.0K Apr 12 18:56 snap
-rwx------ 1 root root   12 Apr 12 20:30 pets.txt
root@TerraformManager:~# cat pets.txt
we love petsroot@TerraformManager:~#


**********************************************************************************************
Destroy resourse

root@TerraformManager:~# terraform destroy

No changes. No objects need to be destroyed.

Either you have not created any objects yet or the existing objects were already deleted outside of Terraform.

Destroy complete! Resources: 0 destroyed.
root@TerraformManager:~# cd /opt/terraform_hcl/
root@TerraformManager:/opt/terraform_hcl# terraform destroy
local_file.pets: Refreshing state... [id=d87a5018d4e1c1e1644d11eafcdf53a95c8968ef]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  - destroy

Terraform will perform the following actions:

  # local_file.pets will be destroyed
  - resource "local_file" "pets" {
      - content              = "we love pets" -> null
      - directory_permission = "0777" -> null
      - file_permission      = "0700" -> null
      - filename             = "/root/pets.txt" -> null
      - id                   = "d87a5018d4e1c1e1644d11eafcdf53a95c8968ef" -> null
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

local_file.pets: Destroying... [id=d87a5018d4e1c1e1644d11eafcdf53a95c8968ef]
local_file.pets: Destruction complete after 0s

Destroy complete! Resources: 1 destroyed.



root@TerraformManager:/opt/terraform_hcl# cd /root
root@TerraformManager:~# ls -lrth
total 8.0K
drwxr-xr-x 4 root root 4.0K Apr 12 18:56 snap
-rw-r--r-- 1 root root  155 Apr 12 20:34 terraform.tfstate
root@TerraformManager:~#

